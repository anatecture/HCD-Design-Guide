<h1>Design for Change</h1>
<h2>Design is Not Permanent</h2>
<p>The Design phase requires much energy and effort to push through. It sometimes seems as though teams must make all the right decisions or get everything perfect before launch is possible. It is important to remember that no design is permanent;
  everything will need to change, will have to flex, and will ultimately be succeeded by something that is hopefully more useful and more delightful than the thing originally designed. To prepare for this and to build in space for flexibility and
  change, many design teams work as though they are always in an interative loop: constantly designing, testing, delivering, and meausuring designs they know aren’t perfect but are getting closer and closer to a perceived ideal.
</p>
<p>By positioning themselves as constantly revising, the designed product or service seems to run the risk of never launching. That's a real risk, and one that we talk about in the <a href= "feedback.html.erb">Feedback</a> section. But by balancing this risk with the risk of creating a thing that is too rigid to flex and change, teams can strike a balance
  between thoughtfully rigorous work and never releasing anything due to excessive caution. Besides, until participants test, design teams can’t even know if their ideas are workable, so it’s imperative to get designs out into the world, to see how the work, and to revise, revise,
  revise. And you don’t even know what perfect is until people start to use it. Know that the work is not permanent, and don’t be too precious with it.
</p>

<!--
<h3>Case Study</h3>
<p>
  <strong>Lab’s edutional products</strong><br>
  The Lab’s educational products are a great example of impermance. Arguably, none of our classes, intensives, or workshops will ever have a perfect version, and, depending on the instructor and partcipants, they will definitely change. The Lab runs
  them over and over again to see which combination of content and timing might work better than a previous version, but there is no illusion that a single, fixed version will continue to be perfect for years and years.
</p>
-->

<h2>Good Ideas Have Long Half-Lives</h2>
<p>As was said before, the design phase is about making decisions. Almost always you will find yourself having to leave behind what you and the team are certain is desirable, feasible design ideas in order to pursue one that is more desireable or feasible. This can feel difficult. You might even feel as if you are not fulfilling the needs of your partcipants, and therefore fulfilling your project mandate, because you are not fulfilling all their needs.
</p>
<p>
Good ideas, however, have long half lives. Better than trying to execute on all the ideas your team has come up with, focus in on the one that you can do well and thoroughly. Note the other ideas down in your project documentation, connecting them back to their reasoning. If possible, share them with other teams that might be able to design for them. But avoid taking on the development of more than one design idea at a time. Your project has a greater potential for success if you allow the team to focus on developing designs for a single idea.
</p>
<p>
Once the initial design phase is complete, the team can always go back to the additional ideas. If the research was done thoroughly and with excellent documentation, those ideas will almost certainly still be pertinent. You might even be able to update them, given the work you have done in your first design phase.  </p>
</p>
<h2>Life cycle of your design</h2>
<p>Creating new work and sharing it with the world is exciting (and frightening); that is doubtless. Through the long, hard Discovery Phase, through all the meetings where the team had to “sell” their vision, through all the emails flying back and forth between the Design and Implementation teams, a lot of work goes into realizing a new product or service. There is a pride, a sunk cost, and an association with a thing, but that doesn’t mean the thing has to continue to be owned or exercised by the original team or department that created it.
</p>

<p>Design systems and products have life cycles, both natural and imposed, usually relative to the amount of time that it takes to build a thing. For example, it takes many years to get a school built, so groups build them to last many years and serve the community. But this does not mean that the school should last forever: as the demographics of the neighborhoods in the area change, for example, the school community should consider how the school should change, or even if it should exist at all. As change occurs, the existence of all designed things should be evaluated, including large-scale projects like schools. Thinking about this aspect of your work means considering the entire life cycle of your design: not just its creation or its sustainability, but its sunset or dismantlement as well.
</p>

<p>This idea might feel odd or painful. After all, why go through all the work getting your work into the world if you’re already thinking of how it might exit it? We are not taught how to do this; as organizations, we largely do not talk about letting go or taking apart. Instead, when designed systems or products become dysfunctional, we often blame the people who administer them, or the argue that the dysfunction is simply how things are, but these are not usually accurate reasons; they are ways to avoid the potential pain of change. Humans fight change; it feels dangerous. Not changing, however, holds us back. For this reason, rather than fight natural life cycles, organizations should strive to acknowledge them and move with them.
</p>

<p>After all, the intention of the project, not the expression of it, should characterize its making. If your team is building an app to encourage and inform young voters, the main purpose is to <i>encourage young voters</i>, not to create an app. As the preferences of and platforms used by young voters shift, the app should be modified or dismantled so that the team sustaining it can focus on encouraging and informing young voters where they are, not where they were when the app was originally built. This logic works on larger scale projects as well. If your team is charged with integrating new weather data into a system of emergency storm response, that system should change as the weather data changes so as to maintain excellence in storm response, not excellence in executing on that original system.
</p>

<!--
<h3>Case Study</h3>
<p>
  <strong>NASA’s space shuttle?
  </strong><br>
  The Discovery space shuttle was used over and over and could be reused.
</p>
-->

<div class="grid-row">
  <div class="grid-col-12 mobile-lg:grid-col-6 tablet:grid-col-3 margin-bottom-2">
    <a class="usa-button usa-button-outline guide-section-link noprint" href="publicsector.html">&lt; Previous</a>
  </div>
  <div class="grid-col-12 mobile-lg:grid-col-4 mobile-lg:grid-offset-2 tablet:grid-col-3 tablet:grid-offset-4 margin-bottom-2">
    <a class="usa-button usa-button-outline guide-section-link noprint" href="communicatingideas.html">Next &gt;</a>
  </div>
</div>
